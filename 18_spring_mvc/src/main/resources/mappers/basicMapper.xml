<?xml version="1.0" encoding="UTF-8"?>

<!-- Mybatis Mapper 파일임을 명시하기 위한 DTD 선언문 (필수) -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 속성 : mapper의 식별자이며 다른 namesapce의 이름과 중복없이 고유해야 한다. -->
<mapper namespace="basic">
	
	<!-- 
	
	   * id 속성  : query의 식별자이며 다른 id와 중복없이 고유해야 한다.
                    namespace와 id속성을 연결시켜 DAO에서 메서드로 매핑한다.
                   
        
	        	[Mapper]							     [DAO]
	        
	     mapper namespace="goods"	
	         select id="goodsList"    	 .selectList("goods.goodsList")
	         insert id="insertGoods"   	 .insert("goods.insertGoods")
	         delete id="deleteGoods"   	 .delete("goods.deleteGoods")
	
		 mapper namespace="member"
			 select id="memberList"		 .selectList("member.memberList")
			 insert id="insertMember" 	 .insert("member.insertMember")
			 update id="updateMember" 	 .update("member.modifyMember")
	
		* parameterType속성 : DAO에서 Mapper으로 전달되는 파라미터의 타입을 명시하며 생략가능하다.
	
		* resultType속성 : 반환되는 데이터의 타입을 명시하며 반환 데이터가 있는 select쿼리문에서 사용한다. (int , String , hashmap , map , Map ,  double , path.DTO , path.VO)
					   	   path.DTO , path.VO 타입은 mybatis-config.xml파일에서 alias(별칭)지정을 하여 간략하게 사용할 수 있다.
		
		* resultMap속성  : 주로 반환되는 데이터의 컬럼명을 POJO변수와 일치시키거나 map 컬렉션프레임워크의 키값으로 등록시키기 위하여 사용한다.
						
	 -->
	 
	 
		<!--  
	<select id ="ex01" resultType="-">
		SELECT
				*
		FROM
				테이블 
	
	</select>

	<select id ="ex02" resultType="-" parameterType="-">
		SELECT
				*
		FROM
				테이블 
		WHERE
				조건절 		
	</select>
	
	<insert id="ex03" parameterType="-">
		INSERT INTO
				테이블
		VALUES (
				데이타
		)
	</insert>

    <update id="ex04" parameterType="-">
    	UPDATE
    			테이블
    	SET
    			데이타
    	WHERE
    			조건절  
    </update>
    
    <delete id="ex05" parameterType="-">
    	DELETE FROM
    			테이블
    	WHERE
    			조건절  
    </delete>
     -->
     
</mapper>