<?xml version="1.0" encoding="UTF-8"?>
<!-- Mybatis Mapper 파일임을 명시하기 위한 DTD 선언문 (반드시 작성한다.) -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="d2m">

	<!-- 		
		
	  	 # DAO to Mapper 데이타 전송 

		- DAO에서 Mybatis에서 파라메타 전송은 1개만 가능하다.
		  1) 단일 데이터의 경우 단일 데이터 전송
		  2) 2개 이상의 데이터일 경우 데이터가 DTO안에 포함되면 DTO타입으로 전송
		  3) 2개 이상의 데이터일 경우 데이터가 DTO안에 포함되지 않으면 Map타입으로 전송
	  	
		- DAO에서 전달 받은 데이타는 쿼리문에서 #{변수} 형태로 사용한다.
		  
		  1)단일 데이터 : #{변수}
		  2)DTO         : #{DTO의 property}
		  3)Map		    : #{map의 key} 
		  
		- '대소문자가 구분' 되므로 오타에 주의한다.
			DTO는 정확하게 property를 입력
			Map은 정확하게 key를 입력
		
		- parameterType 속성은 생략해도 Mybatis가 파라메타의 타입을 인식하여 쿼리문은 수행하지만 
		  가독성 향상을 위해 작성하는 것을 권장한다.	
			
	-->

	<!-- 단일 데이터 전송예시1 -->
	<update id="sample01" parameterType="int">
    UPDATE
			PRODUCT
	SET
			PRICE = PRICE + 1
	WHERE
			PRODUCT_CD = #{productCD} <!-- 넘어 온 데이터 -->	
	</update>
	

	<!-- 단일 데이터 전송예시2 -->
	<update id= "sample02" parameterType="String">
	UPDATE
			PRODUCT
	SET
			DELIVERY_PRICE = DELIVERY_PRICE + 1
	WHERE
			BRAND_CD = #{brandCd} 	
	</update>

	<!-- 단일 데이터 전송예시3 -->
	<select id ="sample03" parameterType="String" resultType="BrandDTO">
	SELECT
			*
	FROM
			BRAND
	WHERE
			BRAND_NM = #{brandNm}
	</select>	
	<!-- DTO 전송예시1 -->
	<insert id="sample04" parameterType ="BrandDTO">
		INSERT INTO 
				BRAND
		VALUES (
				#{brandCd},
				#{brandNm},
				NOW(),
				#{activeYn}		
		)	
	</insert>

	<!-- DTO 전송예시2 -->
	<insert id="sample05" parameterType ="ProductDTO">
		INSERT INTO PRODUCT(
			PRODUCT_NM,
			PRICE,
			DELIVERY_PRICE,
			ENROLL_DT,
			BRAND_CD	
		)	VALUES (
				#{productNm},
				#{price},
				#{deliveryPrice},
				NOW(),
				#{brandCd}
		
		)
	</insert>
		
	<!-- DTO 전송예시3 -->
	<select id ="sample06" parameterType="ProductDTO"
					 	   resultType="ProductDTO">	
	SELECT
			*
	FROM
			PRODUCT
	WHERE
			PRICE >= #{price} AND DELIVERY_PRICE = #{deliveryPrice}
		
	</select>
	
	
	<!-- Map 전송예시1 -->
	<select id="sample07" parameterType="hashMap"
						  resultType= "ProductDTO">
	SELECT
			*
	FROM
			PRODUCT
	WHERE
			PRICE BETWEEN #{min} AND #{max} 
		
	</select>
		
	<!-- Map 전송예시2 -->
	<select id="sample08" parameterType="hashMap"
						  resultType= "BrandDTO">
	SELECT
			*
	FROM
			BRAND
	WHERE
			ENTERED_DT BETWEEN #{startDate} AND #{endDate} 		
	</select>
	
	<!-- Map 전송예시3 -->
	<select id="sample09" parameterType="hashMap"
						  resultType= "hashMap">
	SELECT
			*
	FROM
			PRODUCT P 
		INNER JOIN BRAND B
				ON P.BRAND_CD = B.BRAND_CD
	WHERE
			B.ACTIVE_YN != #{activeYn}
	AND
			P.PRICE > #{price}			
	</select>	
</mapper> 